//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProjectManagementTool.PMTWebService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserProfile", Namespace="http://schemas.datacontract.org/2004/07/projectManagementToolWebAPI.Model")]
    [System.SerializableAttribute()]
    public partial class UserProfile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastLoggedInField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LoggedInField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProjectManagementTool.PMTWebService.UserRole UserRoleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasMessage {
            get {
                return this.HasMessageField;
            }
            set {
                if ((this.HasMessageField.Equals(value) != true)) {
                    this.HasMessageField = value;
                    this.RaisePropertyChanged("HasMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastLoggedIn {
            get {
                return this.LastLoggedInField;
            }
            set {
                if ((this.LastLoggedInField.Equals(value) != true)) {
                    this.LastLoggedInField = value;
                    this.RaisePropertyChanged("LastLoggedIn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LoggedIn {
            get {
                return this.LoggedInField;
            }
            set {
                if ((this.LoggedInField.Equals(value) != true)) {
                    this.LoggedInField = value;
                    this.RaisePropertyChanged("LoggedIn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProjectManagementTool.PMTWebService.UserRole UserRole {
            get {
                return this.UserRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRoleField, value) != true)) {
                    this.UserRoleField = value;
                    this.RaisePropertyChanged("UserRole");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserRole", Namespace="http://schemas.datacontract.org/2004/07/projectManagementToolWebAPI.Model")]
    [System.SerializableAttribute()]
    public partial class UserRole : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ErrorLog", Namespace="http://schemas.datacontract.org/2004/07/projectManagementToolWebAPI.Model")]
    [System.SerializableAttribute()]
    public partial class ErrorLog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Method {
            get {
                return this.MethodField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodField, value) != true)) {
                    this.MethodField = value;
                    this.RaisePropertyChanged("Method");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActivityLog", Namespace="http://schemas.datacontract.org/2004/07/projectManagementToolWebAPI.Model")]
    [System.SerializableAttribute()]
    public partial class ActivityLog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Method {
            get {
                return this.MethodField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodField, value) != true)) {
                    this.MethodField = value;
                    this.RaisePropertyChanged("Method");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Clients", Namespace="http://schemas.datacontract.org/2004/07/projectManagementToolWebAPI.Model")]
    [System.SerializableAttribute()]
    public partial class Clients : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProjectManagementTool.PMTWebService.Projects[] ProjectListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProjectManagementTool.PMTWebService.Projects[] ProjectList {
            get {
                return this.ProjectListField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectListField, value) != true)) {
                    this.ProjectListField = value;
                    this.RaisePropertyChanged("ProjectList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Projects", Namespace="http://schemas.datacontract.org/2004/07/projectManagementToolWebAPI.Model")]
    [System.SerializableAttribute()]
    public partial class Projects : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProjectManagementTool.PMTWebService.Attachments[] AttachmentListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Client_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProjectManagementTool.PMTWebService.Comments[] CommentListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EstimatedCompletionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectScopeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProjectManagementTool.PMTWebService.Attachments[] AttachmentList {
            get {
                return this.AttachmentListField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentListField, value) != true)) {
                    this.AttachmentListField = value;
                    this.RaisePropertyChanged("AttachmentList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Client_ID {
            get {
                return this.Client_IDField;
            }
            set {
                if ((this.Client_IDField.Equals(value) != true)) {
                    this.Client_IDField = value;
                    this.RaisePropertyChanged("Client_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProjectManagementTool.PMTWebService.Comments[] CommentList {
            get {
                return this.CommentListField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentListField, value) != true)) {
                    this.CommentListField = value;
                    this.RaisePropertyChanged("CommentList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EstimatedCompletionDate {
            get {
                return this.EstimatedCompletionDateField;
            }
            set {
                if ((this.EstimatedCompletionDateField.Equals(value) != true)) {
                    this.EstimatedCompletionDateField = value;
                    this.RaisePropertyChanged("EstimatedCompletionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lot {
            get {
                return this.LotField;
            }
            set {
                if ((object.ReferenceEquals(this.LotField, value) != true)) {
                    this.LotField = value;
                    this.RaisePropertyChanged("Lot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectScope {
            get {
                return this.ProjectScopeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectScopeField, value) != true)) {
                    this.ProjectScopeField = value;
                    this.RaisePropertyChanged("ProjectScope");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetAddress {
            get {
                return this.StreetAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetAddressField, value) != true)) {
                    this.StreetAddressField = value;
                    this.RaisePropertyChanged("StreetAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetNumber {
            get {
                return this.StreetNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetNumberField, value) != true)) {
                    this.StreetNumberField = value;
                    this.RaisePropertyChanged("StreetNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Attachments", Namespace="http://schemas.datacontract.org/2004/07/projectManagementToolWebAPI.Model")]
    [System.SerializableAttribute()]
    public partial class Attachments : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtentionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Extention {
            get {
                return this.ExtentionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtentionField, value) != true)) {
                    this.ExtentionField = value;
                    this.RaisePropertyChanged("Extention");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileType {
            get {
                return this.FileTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FileTypeField, value) != true)) {
                    this.FileTypeField = value;
                    this.RaisePropertyChanged("FileType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Comments", Namespace="http://schemas.datacontract.org/2004/07/projectManagementToolWebAPI.Model")]
    [System.SerializableAttribute()]
    public partial class Comments : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Time_StampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time_Stamp {
            get {
                return this.Time_StampField;
            }
            set {
                if ((this.Time_StampField.Equals(value) != true)) {
                    this.Time_StampField = value;
                    this.RaisePropertyChanged("Time_Stamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PMTWebService.IPMTWebAPI")]
    public interface IPMTWebAPI {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPMTWebAPI/Login", ReplyAction="http://tempuri.org/IPMTWebAPI/LoginResponse")]
        ProjectManagementTool.PMTWebService.UserProfile Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPMTWebAPI/Login", ReplyAction="http://tempuri.org/IPMTWebAPI/LoginResponse")]
        System.Threading.Tasks.Task<ProjectManagementTool.PMTWebService.UserProfile> LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPMTWebAPI/CreateUserProfile", ReplyAction="http://tempuri.org/IPMTWebAPI/CreateUserProfileResponse")]
        ProjectManagementTool.PMTWebService.UserProfile CreateUserProfile(string UserName, string Password, string Email, string FirstName, string LastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPMTWebAPI/CreateUserProfile", ReplyAction="http://tempuri.org/IPMTWebAPI/CreateUserProfileResponse")]
        System.Threading.Tasks.Task<ProjectManagementTool.PMTWebService.UserProfile> CreateUserProfileAsync(string UserName, string Password, string Email, string FirstName, string LastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPMTWebAPI/ErrorLogger", ReplyAction="http://tempuri.org/IPMTWebAPI/ErrorLoggerResponse")]
        void ErrorLogger(ProjectManagementTool.PMTWebService.ErrorLog errorlog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPMTWebAPI/ErrorLogger", ReplyAction="http://tempuri.org/IPMTWebAPI/ErrorLoggerResponse")]
        System.Threading.Tasks.Task ErrorLoggerAsync(ProjectManagementTool.PMTWebService.ErrorLog errorlog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPMTWebAPI/ActivityLogger", ReplyAction="http://tempuri.org/IPMTWebAPI/ActivityLoggerResponse")]
        void ActivityLogger(ProjectManagementTool.PMTWebService.ActivityLog activiyLog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPMTWebAPI/ActivityLogger", ReplyAction="http://tempuri.org/IPMTWebAPI/ActivityLoggerResponse")]
        System.Threading.Tasks.Task ActivityLoggerAsync(ProjectManagementTool.PMTWebService.ActivityLog activiyLog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPMTWebAPI/DeleteUser", ReplyAction="http://tempuri.org/IPMTWebAPI/DeleteUserResponse")]
        bool DeleteUser(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPMTWebAPI/DeleteUser", ReplyAction="http://tempuri.org/IPMTWebAPI/DeleteUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPMTWebAPI/AddClient", ReplyAction="http://tempuri.org/IPMTWebAPI/AddClientResponse")]
        string AddClient(int userId, string clientName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPMTWebAPI/AddClient", ReplyAction="http://tempuri.org/IPMTWebAPI/AddClientResponse")]
        System.Threading.Tasks.Task<string> AddClientAsync(int userId, string clientName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPMTWebAPI/DeleteClient", ReplyAction="http://tempuri.org/IPMTWebAPI/DeleteClientResponse")]
        string DeleteClient(int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPMTWebAPI/DeleteClient", ReplyAction="http://tempuri.org/IPMTWebAPI/DeleteClientResponse")]
        System.Threading.Tasks.Task<string> DeleteClientAsync(int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPMTWebAPI/UpdateClient", ReplyAction="http://tempuri.org/IPMTWebAPI/UpdateClientResponse")]
        bool UpdateClient(int clientId, ProjectManagementTool.PMTWebService.Clients client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPMTWebAPI/UpdateClient", ReplyAction="http://tempuri.org/IPMTWebAPI/UpdateClientResponse")]
        System.Threading.Tasks.Task<bool> UpdateClientAsync(int clientId, ProjectManagementTool.PMTWebService.Clients client);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPMTWebAPIChannel : ProjectManagementTool.PMTWebService.IPMTWebAPI, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PMTWebAPIClient : System.ServiceModel.ClientBase<ProjectManagementTool.PMTWebService.IPMTWebAPI>, ProjectManagementTool.PMTWebService.IPMTWebAPI {
        
        public PMTWebAPIClient() {
        }
        
        public PMTWebAPIClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PMTWebAPIClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PMTWebAPIClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PMTWebAPIClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ProjectManagementTool.PMTWebService.UserProfile Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<ProjectManagementTool.PMTWebService.UserProfile> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public ProjectManagementTool.PMTWebService.UserProfile CreateUserProfile(string UserName, string Password, string Email, string FirstName, string LastName) {
            return base.Channel.CreateUserProfile(UserName, Password, Email, FirstName, LastName);
        }
        
        public System.Threading.Tasks.Task<ProjectManagementTool.PMTWebService.UserProfile> CreateUserProfileAsync(string UserName, string Password, string Email, string FirstName, string LastName) {
            return base.Channel.CreateUserProfileAsync(UserName, Password, Email, FirstName, LastName);
        }
        
        public void ErrorLogger(ProjectManagementTool.PMTWebService.ErrorLog errorlog) {
            base.Channel.ErrorLogger(errorlog);
        }
        
        public System.Threading.Tasks.Task ErrorLoggerAsync(ProjectManagementTool.PMTWebService.ErrorLog errorlog) {
            return base.Channel.ErrorLoggerAsync(errorlog);
        }
        
        public void ActivityLogger(ProjectManagementTool.PMTWebService.ActivityLog activiyLog) {
            base.Channel.ActivityLogger(activiyLog);
        }
        
        public System.Threading.Tasks.Task ActivityLoggerAsync(ProjectManagementTool.PMTWebService.ActivityLog activiyLog) {
            return base.Channel.ActivityLoggerAsync(activiyLog);
        }
        
        public bool DeleteUser(int userId) {
            return base.Channel.DeleteUser(userId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserAsync(int userId) {
            return base.Channel.DeleteUserAsync(userId);
        }
        
        public string AddClient(int userId, string clientName) {
            return base.Channel.AddClient(userId, clientName);
        }
        
        public System.Threading.Tasks.Task<string> AddClientAsync(int userId, string clientName) {
            return base.Channel.AddClientAsync(userId, clientName);
        }
        
        public string DeleteClient(int clientId) {
            return base.Channel.DeleteClient(clientId);
        }
        
        public System.Threading.Tasks.Task<string> DeleteClientAsync(int clientId) {
            return base.Channel.DeleteClientAsync(clientId);
        }
        
        public bool UpdateClient(int clientId, ProjectManagementTool.PMTWebService.Clients client) {
            return base.Channel.UpdateClient(clientId, client);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateClientAsync(int clientId, ProjectManagementTool.PMTWebService.Clients client) {
            return base.Channel.UpdateClientAsync(clientId, client);
        }
    }
}
